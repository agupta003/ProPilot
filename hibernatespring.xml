<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd" >
<beans>


	<bean id="driverManagerDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/training</value>
		</property>
		<property name="username">
			<value>training</value>
		</property>
		<property name="password">
			<value>training</value>
		</property>
	</bean>


	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<!--
				You can configure any datasource like jndi or dbcp.See
				jdbcSupport.xml to know how different types of data sources can be
				configured
			-->
			<ref bean="driverManagerDataSource" />
		</property>

		<!--
			You can configure the properties that you use to configure in
			hibernate.cfg.xml file, right here
		-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>

		<!--  this is how you can configure the .hbm.xml files -->
		<property name="mappingResources">
			<list>
				<value>com/itservicesone/training/spring/model/Customer.hbm.xml</value>
			</list>
		</property>

		<!--
			The best way to configure all .hbm.xml files at once is as follows
		-->
		<!--  You can have more than one locations specified  -->
		<!--
			<property name="mappingDirectoryLocations"> <list>

			<value>classpath:/com/itservicesone/training/spring/model</value>
			</list> </property>
		-->
	</bean>

	<bean name="hibernateTemplate" class=" org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>

	</bean>

	<bean id="customerHibernateDAO"
		class="com.itservicesone.training.spring.model.CustomerHibernateDAO">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate" />
		</property>
	</bean>

	<bean id="customerHibernateDAOSupport"
		class="com.itservicesone.training.spring.model.CustomerHibernateDAOSupport">
		<!-- Either sessionFactory or hibernateTemplate property must be set -->
		<property name="sessionFactory">
		   <ref bean="sessionFactory"/>
		</property>
	</bean>


</beans>
